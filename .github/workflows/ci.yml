---
name: CI/Linting,Testing And Building artifacts
on:
  pull_request:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/ci.yml'
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/ci.yml'

env:
  TOX_VERSION: '3.26.0'
  DOCKERHUB_REPO: 'theodore86/aws-route53'
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
jobs:
  python_linting_and_testing:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install tox automation tool
        run: |
          pip3 install tox==${{ env.TOX_VERSION }}

      - name: Static type checking
        run: |
          tox -e mypy

      - name: Static code analysis
        run: |
          tox -e pylint

  dockerfile_linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v2.1.0
        with:
          failure-threshold: error

  build_and_publish_docker_image:
    needs: ['dockerfile_linting', 'python_linting_and_testing']
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout SCM'
        uses: 'actions/checkout@v3.1.0'

      - name: 'Login to docker registry'
        uses: 'docker/login-action@v2.0.0'
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}
          logout: true

      - name: 'Retrieve latest commit sha as image tag'
        id: 'git_short_sha'
        run: |
          short_sha=$(git log -1 --format=%h)
          echo "::set-output name=short_sha::$short_sha"

      - name: 'Build and push docker image'
        uses: 'docker/build-push-action@v3.1.1'
        with:
          push: true
          context: .
          file: Dockerfile
          no-cache: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ steps.git_short_sha.outputs.short_sha }}
            ${{ env.DOCKERHUB_REPO }}:latest
...
